public static boolean SlideValue(int iDimension, int[][] arrTile, int iSlidePosition){
		if (iSlidePosition == 1){
			int stepCount = 0, changed = 0, lastChangePosX = -1, lastChangePosY = -1, lastChangeVal = -1;
			int h = iDimension;
			for(int x=1;x<=h*h;x++){
				for(int i=0;i<iDimension;i++){
					for(int j=iDimension-1;j>=0;j--){
						//if (arrTile[j][i] == 0) continue;
						if (arrTile[j][i] != 0){
							if (j-1 >= 0 && arrTile[j-1][i] == 0){
								arrTile[j-1][i] = arrTile[j][i];
								arrTile[j][i] = 0;
								stepCount++;
							}else if (j-1 >= 0 && arrTile[j-1][i] != 0){	// (lastChangeVal != arrTile[j-1][i] && lastChangePos != j-1)
								if (arrTile[j-1][i] == arrTile[j][i] && (changed == 0 || (lastChangeVal != arrTile[j-1][i]*2 && lastChangePosY != j-1 && lastChangePosX != i))){
									System.out.println("Old: " + lastChangePosX + "," + lastChangePosY + ": " + lastChangeVal);
									arrTile[j-1][i] += arrTile[j][i];
									arrTile[j][i] = 0;
									lastChangeVal = arrTile[j-1][i] + 1;
									changed++;
									stepCount++;
									lastChangePosY = j-1;
									lastChangePosX = i;
									//System.out.println("New: " + lastChangePos + ": " + lastChangeVal + "{j-1: " + (j-1) + ", now: " + (arrTile[j-1][i]));
									//break;
								}
							}
							//System.out.println(stepCount + ": (i,j): " + "(" + i + "," + j + "): iDImension-1: " + (iDimension-1) + " h: " + h);
						}
						
						if (stepCount == 0 && i == iDimension-1 && j == 0){
							System.out.println(stepCount + ": (i,j): " + "(" + i + "," + j + ") in");
							return false;
						}
					}
				}
				//x += 1;
			}
		}else if (iSlidePosition == 2){
			int stepCount = 0, changed = 0, lastChangePosX = -1, lastChangePosY = -1, lastChangeVal = -1;
			int h = iDimension;
			for(int x=1;x<=h*h;x++){
				for(int i=0;i<iDimension;i++){
					for(int j=0;j<iDimension;j++){
						//if (arrTile[j][i] == 0) continue;
						if (arrTile[j][i] != 0){
							if (j+1 < iDimension && arrTile[j+1][i] == 0){
								arrTile[j+1][i] = arrTile[j][i];
								arrTile[j][i] = 0;
								stepCount++;
							}else if (j+1 < iDimension && arrTile[j+1][i] != 0){	
								if (arrTile[j+1][i] == arrTile[j][i] && (changed == 0 || (lastChangeVal != arrTile[j+1][i]*2 && lastChangePosY != j+1 && lastChangePosX != i))){	// (lastChangeVal != arrTile[j+1][i] && lastChangePos != j+1)
									System.out.println("Old: " + lastChangePosX + "," + lastChangePosY + ": " + lastChangeVal);
									arrTile[j+1][i] += arrTile[j][i];
									arrTile[j][i] = 0;
									lastChangeVal = arrTile[j+1][i] + 1;
									changed++;
									stepCount++;
									lastChangePosY = j+1;
									lastChangePosX = i;
									//System.out.println("New: " + lastChangePos + ": " + lastChangeVal + "{j-1: " + (j+1) + ", now: " + (arrTile[j+1][i]));
									//break;
								}
							}
							//System.out.println(stepCount + ": (i,j): " + "(" + i + "," + j + "): iDImension-1: " + (iDimension-1) + " h: " + h);
						}
						
						if (stepCount == 0 && i == iDimension-1 && j == iDimension-1){
							System.out.println(stepCount + ": (i,j): " + "(" + i + "," + j + ") in");
							return false;
						}
					}
				}
				//x += 1;
			}
		}
		return true;
	}
